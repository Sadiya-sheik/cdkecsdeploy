# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Install CDK
        run: npm install -g aws-cdk
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-skip-session-tagging: true
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{secrets.AWS_REGION}}
          #role-to-assume: ${{secrets.AWS_ROLE_TO_ASSUME}}
          #role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
          #role-duration-seconds: 1200
          #role-session-name: ec2-cdk-session
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          aws ecr get-login-password --region ${{secrets.AWS_REGION}} | docker login --username ${{secrets.AWS_USER}} --password-stdin ${{secrets.ECR_REGISTRY}}
          docker build -t ${{secrets.CONTAINER_NAME}} .
          docker tag ${{secrets.CONTAINER_NAME}}:${{secrets.CONTAINER_TAG}} ${{secrets.ECR_REGISTRY}}:${{secrets.CONTAINER_TAG}}
          docker push ${{secrets.ECR_REGISTRY}}:${{secrets.CONTAINER_TAG}}
          cdk synth
          cdk bootstrap
          cdk deploy AcertusEcsCdkStack ---require-approval never
